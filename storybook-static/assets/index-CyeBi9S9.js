function I(i,e){for(var t=0;t<e.length;t++){const n=e[t];if(typeof n!="string"&&!Array.isArray(n)){for(const o in n)if(o!=="default"&&!(o in i)){const s=Object.getOwnPropertyDescriptor(n,o);s&&Object.defineProperty(i,o,s.get?s:{enumerable:!0,get:()=>n[o]})}}}return Object.freeze(Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}))}var F=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function U(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}function z(i){if(i.__esModule)return i;var e=i.default;if(typeof e=="function"){var t=function n(){return this instanceof n?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(i).forEach(function(n){var o=Object.getOwnPropertyDescriptor(i,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return i[n]}})}),t}var a={};Object.defineProperty(a,"__esModule",{value:!0});var w=a.spyOn=R=a.mocked=P=a.fn=E=a.ModuleMocker=void 0;function k(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}const d="mockConstructor",C=/[\s!-\/:-@\[-`{-~]/,A=new RegExp(C.source,"g"),D=new Set(["arguments","await","break","case","catch","class","const","continue","debugger","default","delete","do","else","enum","eval","export","extends","false","finally","for","function","if","implements","import","in","instanceof","interface","let","new","null","package","private","protected","public","return","static","super","switch","this","throw","true","try","typeof","var","void","while","with","yield"]);function j(i,e){let t;switch(e){case 1:t=function(n){return i.apply(this,arguments)};break;case 2:t=function(n,o){return i.apply(this,arguments)};break;case 3:t=function(n,o,s){return i.apply(this,arguments)};break;case 4:t=function(n,o,s,c){return i.apply(this,arguments)};break;case 5:t=function(n,o,s,c,r){return i.apply(this,arguments)};break;case 6:t=function(n,o,s,c,r,u){return i.apply(this,arguments)};break;case 7:t=function(n,o,s,c,r,u,l){return i.apply(this,arguments)};break;case 8:t=function(n,o,s,c,r,u,l,f){return i.apply(this,arguments)};break;case 9:t=function(n,o,s,c,r,u,l,f,p){return i.apply(this,arguments)};break;default:t=function(){return i.apply(this,arguments)};break}return t}function O(i){return Object.prototype.toString.apply(i).slice(8,-1)}function G(i){const e=O(i);return e==="Function"||e==="AsyncFunction"||e==="GeneratorFunction"?"function":Array.isArray(i)?"array":e==="Object"?"object":e==="Number"||e==="String"||e==="Boolean"||e==="Symbol"?"constant":e==="Map"||e==="WeakMap"||e==="Set"?"collection":e==="RegExp"?"regexp":i===void 0?"undefined":i===null?"null":null}function x(i,e){if(e==="arguments"||e==="caller"||e==="callee"||e==="name"||e==="length"){const t=O(i);return t==="Function"||t==="AsyncFunction"||t==="GeneratorFunction"}return e==="source"||e==="global"||e==="ignoreCase"||e==="multiline"?O(i)==="RegExp":!1}class v{constructor(e){k(this,"_environmentGlobal",void 0),k(this,"_mockState",void 0),k(this,"_mockConfigRegistry",void 0),k(this,"_spyState",void 0),k(this,"_invocationCallCounter",void 0),this._environmentGlobal=e,this._mockState=new WeakMap,this._mockConfigRegistry=new WeakMap,this._spyState=new Set,this._invocationCallCounter=1}_getSlots(e){if(!e)return[];const t=new Set,n=this._environmentGlobal.Object.prototype,o=this._environmentGlobal.Function.prototype,s=this._environmentGlobal.RegExp.prototype,c=Object.prototype,r=Function.prototype,u=RegExp.prototype;for(;e!=null&&e!==n&&e!==o&&e!==s&&e!==c&&e!==r&&e!==u;){const l=Object.getOwnPropertyNames(e);for(let f=0;f<l.length;f++){const p=l[f];if(!x(e,p)){const g=Object.getOwnPropertyDescriptor(e,p);(g!==void 0&&!g.get||e.__esModule)&&t.add(p)}}e=Object.getPrototypeOf(e)}return Array.from(t)}_ensureMockConfig(e){let t=this._mockConfigRegistry.get(e);return t||(t=this._defaultMockConfig(),this._mockConfigRegistry.set(e,t)),t}_ensureMockState(e){let t=this._mockState.get(e);return t||(t=this._defaultMockState(),this._mockState.set(e,t)),t.calls.length>0&&(t.lastCall=t.calls[t.calls.length-1]),t}_defaultMockConfig(){return{mockImpl:void 0,mockName:"jest.fn()",specificMockImpls:[],specificReturnValues:[]}}_defaultMockState(){return{calls:[],instances:[],invocationCallOrder:[],results:[]}}_makeComponent(e,t){if(e.type==="object")return new this._environmentGlobal.Object;if(e.type==="array")return new this._environmentGlobal.Array;if(e.type==="regexp")return new this._environmentGlobal.RegExp("");if(e.type==="constant"||e.type==="collection"||e.type==="null"||e.type==="undefined")return e.value;if(e.type==="function"){const n=e.members&&e.members.prototype&&e.members.prototype.members||{},o=this._getSlots(n),s=this,c=j(function(...u){const l=s._ensureMockState(r),f=s._ensureMockConfig(r);l.instances.push(this),l.calls.push(u);const p={type:"incomplete",value:void 0};l.results.push(p),l.invocationCallOrder.push(s._invocationCallCounter++);let g,M,h=!1;try{g=(()=>{if(this instanceof r){o.forEach(y=>{if(n[y].type==="function"){const S=this[y];this[y]=s.generateFromMetadata(n[y]),this[y]._protoImpl=S}});const b=f.specificMockImpls.length?f.specificMockImpls.shift():f.mockImpl;return b&&b.apply(this,arguments)}let m=f.specificMockImpls.shift();if(m===void 0&&(m=f.mockImpl),m)return m.apply(this,arguments);if(r._protoImpl)return r._protoImpl.apply(this,arguments)})()}catch(m){throw M=m,h=!0,m}finally{p.type=h?"throw":"return",p.value=h?M:g}return g},e.length||0),r=this._createMockFunction(e,c);return r._isMockFunction=!0,r.getMockImplementation=()=>this._ensureMockConfig(r).mockImpl,typeof t=="function"&&this._spyState.add(t),this._mockState.set(r,this._defaultMockState()),this._mockConfigRegistry.set(r,this._defaultMockConfig()),Object.defineProperty(r,"mock",{configurable:!1,enumerable:!0,get:()=>this._ensureMockState(r),set:u=>this._mockState.set(r,u)}),r.mockClear=()=>(this._mockState.delete(r),r),r.mockReset=()=>(r.mockClear(),this._mockConfigRegistry.delete(r),r),r.mockRestore=()=>(r.mockReset(),t?t():void 0),r.mockReturnValueOnce=u=>r.mockImplementationOnce(()=>u),r.mockResolvedValueOnce=u=>r.mockImplementationOnce(()=>Promise.resolve(u)),r.mockRejectedValueOnce=u=>r.mockImplementationOnce(()=>Promise.reject(u)),r.mockReturnValue=u=>r.mockImplementation(()=>u),r.mockResolvedValue=u=>r.mockImplementation(()=>Promise.resolve(u)),r.mockRejectedValue=u=>r.mockImplementation(()=>Promise.reject(u)),r.mockImplementationOnce=u=>(this._ensureMockConfig(r).specificMockImpls.push(u),r),r.mockImplementation=u=>{const l=this._ensureMockConfig(r);return l.mockImpl=u,r},r.mockReturnThis=()=>r.mockImplementation(function(){return this}),r.mockName=u=>{if(u){const l=this._ensureMockConfig(r);l.mockName=u}return r},r.getMockName=()=>this._ensureMockConfig(r).mockName||"jest.fn()",e.mockImpl&&r.mockImplementation(e.mockImpl),r}else{const n=e.type||"undefined type";throw new Error("Unrecognized type "+n)}}_createMockFunction(e,t){let n=e.name;if(!n)return t;const o="bound ";let s="";if(n&&n.startsWith(o))do n=n.substring(o.length),s=".bind(null)";while(n&&n.startsWith(o));if(n===d)return t;(D.has(n)||/^\d/.test(n))&&(n="$"+n),C.test(n)&&(n=n.replace(A,"$"));const c="return function "+n+"() {return "+d+".apply(this,arguments);}"+s;return new this._environmentGlobal.Function(d,c)(t)}_generateMock(e,t,n){const o=this._makeComponent(e);return e.refID!=null&&(n[e.refID]=o),this._getSlots(e.members).forEach(s=>{const c=e.members&&e.members[s]||{};c.ref!=null?t.push(function(r){return()=>o[s]=n[r]}(c.ref)):o[s]=this._generateMock(c,t,n)}),e.type!=="undefined"&&e.type!=="null"&&o.prototype&&typeof o.prototype=="object"&&(o.prototype.constructor=o),o}generateFromMetadata(e){const t=[],n={},o=this._generateMock(e,t,n);return t.forEach(s=>s()),o}getMetadata(e,t){const n=t||new Map,o=n.get(e);if(o!=null)return{ref:o};const s=G(e);if(!s)return null;const c={type:s};if(s==="constant"||s==="collection"||s==="undefined"||s==="null")return c.value=e,c;s==="function"&&(c.name=e.name,e._isMockFunction===!0&&(c.mockImpl=e.getMockImplementation())),c.refID=n.size,n.set(e,c.refID);let r=null;return s!=="array"&&this._getSlots(e).forEach(u=>{if(s==="function"&&e._isMockFunction===!0&&u.match(/^mock/))return;const l=this.getMetadata(e[u],n);l&&(r||(r={}),r[u]=l)}),r&&(c.members=r),c}isMockFunction(e){return!!e&&e._isMockFunction===!0}fn(e){const t=e?e.length:0,n=this._makeComponent({length:t,type:"function"});return e&&n.mockImplementation(e),n}spyOn(e,t,n){if(n)return this._spyOnProperty(e,t,n);if(typeof e!="object"&&typeof e!="function")throw new Error("Cannot spyOn on a primitive value; "+this._typeOf(e)+" given");const o=e[t];if(!this.isMockFunction(o)){if(typeof o!="function")throw new Error("Cannot spy the "+t+" property because it is not a function; "+this._typeOf(o)+" given instead");const s=Object.prototype.hasOwnProperty.call(e,t);let c=Object.getOwnPropertyDescriptor(e,t),r=Object.getPrototypeOf(e);for(;!c&&r!==null;)c=Object.getOwnPropertyDescriptor(r,t),r=Object.getPrototypeOf(r);let u;if(c&&c.get){const l=c.get;u=this._makeComponent({type:"function"},()=>{c.get=l,Object.defineProperty(e,t,c)}),c.get=()=>u,Object.defineProperty(e,t,c)}else u=this._makeComponent({type:"function"},()=>{s?e[t]=o:delete e[t]}),e[t]=u;u.mockImplementation(function(){return o.apply(this,arguments)})}return e[t]}_spyOnProperty(e,t,n="get"){if(typeof e!="object"&&typeof e!="function")throw new Error("Cannot spyOn on a primitive value; "+this._typeOf(e)+" given");if(!e)throw new Error("spyOn could not find an object to spy upon for "+t);if(!t)throw new Error("No property name supplied");let o=Object.getOwnPropertyDescriptor(e,t),s=Object.getPrototypeOf(e);for(;!o&&s!==null;)o=Object.getOwnPropertyDescriptor(s,t),s=Object.getPrototypeOf(s);if(!o)throw new Error(t+" property does not exist");if(!o.configurable)throw new Error(t+" is not declared configurable");if(!o[n])throw new Error("Property "+t+" does not have access type "+n);const c=o[n];if(!this.isMockFunction(c)){if(typeof c!="function")throw new Error("Cannot spy the "+t+" property because it is not a function; "+this._typeOf(c)+" given instead");o[n]=this._makeComponent({type:"function"},()=>{o[n]=c,Object.defineProperty(e,t,o)}),o[n].mockImplementation(function(){return c.apply(this,arguments)})}return Object.defineProperty(e,t,o),o[n]}clearAllMocks(){this._mockState=new WeakMap}resetAllMocks(){this._mockConfigRegistry=new WeakMap,this._mockState=new WeakMap}restoreAllMocks(){this._spyState.forEach(e=>e()),this._spyState=new Set}_typeOf(e){return e==null?""+e:typeof e}mocked(e,t=!1){return e}}var E=a.ModuleMocker=v;const _=new v(F),V=_.fn.bind(_);var P=a.fn=V;const W=_.spyOn.bind(_);w=a.spyOn=W;const T=_.mocked.bind(_);var R=a.mocked=T;const K=I({__proto__:null,get ModuleMocker(){return E},default:a,get fn(){return P},get mocked(){return R},get spyOn(){return w}},[a]);export{E as M,U as a,F as c,z as g,K as m};
